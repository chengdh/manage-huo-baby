# -*- encoding : utf-8 -*-
#coding: utf-8
require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe ShortFeeInfosController do
  login_admin
  render_views

  describe "GET index" do
    before(:each) do
      @short_fee_info = Factory(:short_fee_info)
    end

    it "assigns all short_fee_infos as @short_fee_infos" do
      get :index
      response.should be_success
    end
  end

  describe "GET show" do
    before(:each) do
      @short_fee_info = Factory(:short_fee_info)
    end

    it "should be success" do
      get :show, :id => @short_fee_info
      response.should be_success
    end

    it "assigns the requested short_fee_info as @short_fee_info" do
      get :show, :id => @short_fee_info
      response.should render_template('show')
    end
  end

  describe "GET new" do
    it "should be success" do
      get :new
      response.should be_success
    end
  end

  describe "POST create" do
    before(:each) do
      @attr = Factory.build(:short_fee_info).attributes
      @bill_ids = [Factory(:computer_bill).id]
    end
    describe "success" do
      it "能够成功保存票据信息" do
        lambda do
          post :create, :short_fee_info => @attr,:bill_ids => @bill_ids
        end.should change(ShortFeeInfo,:count).by(1)
      end

      it "redirects to the created short_fee_info" do
        post :create, :short_fee_info => @attr,:bill_ids => @bill_ids
        response.should redirect_to(short_fee_info_path(assigns(:short_fee_info)))
      end
    end

    describe "with invalid params" do
      it "re-renders the 'new' template" do
        post :create, :short_fee_info => {},:bill_ids => @bill_ids
        response.should render_template("new")
      end
    end

  end

  describe "DELETE destroy" do
    before(:each) do
      @short_fee_info = Factory(:short_fee_info)
    end

    it "destroys the requested short_fee_info" do
      lambda do
        delete :destroy, :id => @short_fee_info
      end.should change(ShortFeeInfo,:count).by(-1)
    end

    it "redirects to the short_fee_infos list" do
      delete :destroy, :id => @short_fee_info
      response.should redirect_to(short_fee_infos_url)
    end
  end
end

